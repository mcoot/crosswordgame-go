package template

import "fmt"
import "strconv"
import lobbytypes "github.com/mcoot/crosswordgame-go/internal/lobby/types"
import gametypes "github.com/mcoot/crosswordgame-go/internal/game/types"
import playertypes "github.com/mcoot/crosswordgame-go/internal/player/types"

templ AnnouncementForm(lobbyId lobbytypes.LobbyId) {
    @commonForm("announcement-form", fmt.Sprintf("/lobby/%s/announce", lobbyId)) {
        <label for="announced_letter">Letter to announce:</label>
        <input type="text" name="announced_letter" placeholder="Letter to announce" />
        <input type="submit" value="Announce" />
    }
}

templ gameHeader(game *gametypes.Game, isPlaying bool) {
    if isPlaying {
        <h2>Game { string(game.Id) }</h2>
    } else {
        <h2>Game { string(game.Id) } (spectating)</h2>
    }
}

templ gameStatus(game *gametypes.Game, players []*playertypes.Player, viewingPlayer *playertypes.Player) {
    <div>
    <h3>In game:</h3>
    @playerList(players, viewingPlayer)
    <p>Status: { string(game.Status) }</p>
    </div>
}

templ GameView(game *gametypes.Game, players []*playertypes.Player, viewingPlayer *playertypes.Player, isPlaying bool, ingameView templ.Component) {
    <div class="cwg-game">
        @gameHeader(game, isPlaying)
        @gameStatus(game, players, viewingPlayer)
        @ingameView
    </div>
}

templ GameScores(players []*playertypes.Player, viewingPlayer *playertypes.Player, scores map[playertypes.PlayerId]*gametypes.ScoreResult) {
    <h3>Game scores</h3>
    <table>
    <thead>
        <tr>
        <th>Player</th>
        <th>Score</th>
        <th>Words</th>
        </tr>
    </thead>
    <tbody>
    for _, player := range players {
        <tr>
        <td>
        if player.Username == viewingPlayer.Username {
            <b>{ player.DisplayName }</b>
        } else {
            { player.DisplayName }
        }
        </td>
        <td>{ strconv.Itoa(scores[player.Username].TotalScore) }</td>
        <td>{ strconv.Itoa(scores[player.Username].TotalScore) }</td>
        <td>
        <ul>
        for _, word := range scores[player.Username].Words {
            <li>{ word.Word } - { strconv.Itoa(word.Score) }</li>
        }
        </ul>
        </td>
        </tr>
    }
    </tbody>
    </table>
}